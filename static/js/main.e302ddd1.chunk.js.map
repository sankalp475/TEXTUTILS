{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","ThemeMode","href","title","type","id","onClick","hrefggleTheme","htmlFor","about","placeholder","style","color","background","border","padding","borderRadius","textTransform","TextForm","useState","Text","setText","btn_styled_outline","marginBottom","marginTop","marginLeft","marginRight","handleCopy","e","a","preventDefault","navigator","clipboard","text","writeText","console","log","error","Heading","value","Mode","height","onChange","target","TextValue","toUpperCase","toLowerCase","split","join","length","Alert","role","word","lowerCase","charAt","slice","capitalised","msg","App","setThemeMode","alert","setAlert","showAlert","massage","setTimeout","bodyTg","document","querySelector","aboutUrl","ToggleTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e302ddd1.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nfunction Navbar(props) {\r\n\r\n\r\n\r\n\tconst btn_styled = {\r\n\t\tcolor: '#fff',\r\n\t\tbackground: '#20c997',\r\n\t\tborder: '2px solid #20c997',\r\n\t\tpadding: '5px 13px',\r\n\t\tborderRadius: '5px',\r\n\t\ttextTransform: 'uppercase'\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<nav\r\n\t\t\tclassName={`\r\n\t\t\t     navbar navbar-expand-lg\r\n\t\t\t\t navbar-${props.ThemeMode}\r\n\t\t\t\t bg-${props.ThemeMode}\r\n\t\t\t\t ${(props.ThemeMode === 'light') ?\r\n\t\t\t\t\t'box_shadow'\r\n\t\t\t\t\t: 'light'}`\r\n\t\t\t}>\r\n\r\n\t\t\t<div className=\"container-fluid \">\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"/\">\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</a>\r\n\t\t\t\t<buthrefn className=\"navbar-hrefggler hrefggle\" type=\"buthrefn\" data-bs-hrefggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"hrefggle navigation\">\r\n\t\t\t\t\t<span className=\"navbar-hrefggler-icon\"></span>\r\n\t\t\t\t</buthrefn>\r\n\r\n\t\t\t    <div className=\"form-check form-switch btn-tgl\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form-check-input padd\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tid=\"flexSwitchCheckChecked\"\r\n\t\t\t\t\t\tonClick={props.hrefggleTheme}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"checkbox\" className={`text-${(props.ThemeMode === 'light')? 'dark' : 'light'}`}>MODE</label>\r\n\t\t\t    </div>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav me-auhref mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link\" href='/about'>{props.about}</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<form className=\"d-flex search-box\">\r\n\t\t\t\t\t\t<input className=\"form-control me-2 search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\t\t\t\t\t\t<buthrefn style={btn_styled}>serach</buthrefn>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\r\n\t)\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tabout: PropTypes.string.isRequired,\r\n\taboutUrl: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import '../components/css/Textform.css';\r\nimport React, { useState } from 'react'\r\n\r\nfunction TextForm(props) {\r\n\tconst [Text, setText] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetText(e.target.value)\r\n\t}\r\n\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// console.log('upper case wase clickes')\r\n\t\tlet TextValue = Text.toUpperCase()\r\n\t\tsetText(TextValue)\r\n\t}\r\n\r\n\tconst btn_styled_upperCase = {\r\n\t\tcolor: '#20c997',\r\n\t\tbackground: '#20c997',\r\n\t\tborder: '2px solid #20c997',\r\n\t\tpadding: '5px 13px',\r\n\t\tborderRadius: '5px',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tmarginBottom: '10px',\r\n\t\tmarginTop: '10px',\r\n\t\tmarginLeft: '10px',\r\n\t\tmarginRight: '10px'\r\n\r\n\t}\r\n\r\n\tconst btn_styled_outline = {\r\n\t\tcolor: '#20c997',\r\n\t\tbackground: '#fff',\r\n\t\tborder: '2px solid #20c997',\r\n\t\tpadding: '5px 13px',\r\n\t\tborderRadius: '5px',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tmarginBottom: '10px',\r\n\t\tmarginTop: '10px',\r\n\t\tmarginLeft: '10px',\r\n\t\tmarginRight: '10px'\r\n\t}\r\n\r\n\tconst handleClear = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet cleatText = ''\r\n\t\tsetText(cleatText)\r\n\t}\r\n\r\n\tconst handleCopy = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (!navigator.clipboard) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst text = Text\r\n\t\tif (text === '') {\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tawait navigator.clipboard.writeText(text)\r\n\t\t\tconsole.log('Copied to clipboard')\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed to copy!', err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleLower = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// console.log('upper case wase clickes')\r\n\t\tlet TextValue = Text.toLowerCase()\r\n\t\tsetText(TextValue)\r\n\t}\r\n\r\n\tconst handSplit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet TextValue = Text.split(' ').join('')\r\n\t\tsetText(TextValue)\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<form className=\"my-4\">\r\n\t\t\t<h5>{props.Heading}</h5>\r\n\t\t\t<div className=\"form-floating my-2 mx-textarea\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={Text}\r\n\t\t\t\t\tclassName={`form-control textarea text-${(props.Mode === 'light')?'dark':'light'}`}\r\n\t\t\t\t\tplaceholder=\"Leave a comment here\" id=\"floatingTextarea2\"\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theight: \"200px\",\r\n\t\t\t\t\t\t\tbackground: 'transparent',\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t>\r\n\t\t\t\t</textarea>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_upperCase}\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t\tclassName={`\r\n\t\t\t\t    bg-${(props.Mode === 'light') ? 'dark' : 'transparent'}\r\n\t\t\t    `}\r\n\r\n\t\t\t>   ToUpperCase\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handleClear}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   clear\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handleCopy}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   CopyText\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handleLower}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   TOlowar case\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handSplit}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   remove space\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className=\"container font\">\r\n\t\t\t\t<h4 className=\"headingText\">Your Summry</h4>\r\n\r\n\t\t\t\t<span className=\"mx-3\">WORDS:</span>\r\n\t\t\t\t<span >{Text.split(' ').length}</span>\r\n\t\t\t\t<span className=\"mx-3\">CHARACTERS:</span>\r\n\t\t\t\t<span >{Text.length}</span>\r\n\r\n\t\t\t\t<div>{0.008 * Text.split(' ').length} Words to Read</div>\r\n\t\t\t\t<h3>Prevue</h3>\r\n\t\t\t\t<p className=\"my-2 mx-3\">\r\n\t\t\t\t\t<span className='my-3'>{Text}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\t// const close_btn = {\r\n\t// \tcolor: '#fff',\r\n\t// \tbackground: '#20c997',\r\n\t// \tborder: '2px solid #20c997',\r\n\t// \tpadding: '0px 13px',\r\n\t// \tborderRadius: '5px',\r\n\t// \ttextTransform: 'uppercase',\r\n\t// \tmarginBottom: '10px',\r\n\t// \tmarginTop: '10px',\r\n\t// \tmarginLeft: '10px',\r\n\t// \tmarginRight: '10px',\r\n\t// \tfontSize: '1.3rem',\r\n\t// \tposition: 'absolute',\r\n\t// \tright: '0',\r\n\t// \ttop:'0'\r\n\t// }\r\n\t// const handleClick = (e) => {\r\n\t// \tconsole.log(e.target.parentElement.style.display = 'none')\r\n\t// }\r\n\r\n\tconst capitalised = (word) => {\r\n\t\tconst lowerCase = word.toLowerCase()\r\n\t\treturn lowerCase.charAt(0).toUpperCase() + lowerCase.slice(1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.Alert && <div className=\"alert alert-success alert-dismissible  fade show my-3\" role=\"alert\">\r\n\t\t\t\t<strong>{capitalised(props.Alert.type)}</strong>  {props.Alert.msg}\r\n\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert\r\n","// import About from './components/About';\r\nimport './components/css/App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport { useState } from 'react'\r\nimport Alert from './components/Alert';\r\n// import {\r\n// \tBrowserRouter as Router,\r\n// \tSwitch,\r\n// \tRoute,\r\n// \tLink\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\tconst [ThemeMode, setThemeMode] = useState('light');\r\n\tconst [alert, setAlert] = useState(null)\r\n\r\n\tconst showAlert = (massage, type) => {\r\n\t\tsetAlert({\r\n\t\t\tmsg: massage,\r\n\t\t\ttype: type,\r\n\t\t})\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetAlert(null)\r\n\t\t}, 1200)\r\n\t}\r\n\tconst ToggleTheme = () => {\r\n\t\tif (ThemeMode === 'light') {\r\n\t\t\tsetThemeMode('dark')\r\n\t\t\tshowAlert('dark mode has been enabled', 'SUCCESS')\r\n\r\n\t\t} else {\r\n\t\t\tsetThemeMode('light')\r\n\t\t\tshowAlert('light mode has been enabled', 'SUCCESS')\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tconst bodyTg = document.querySelector('body')\r\n\t// const acc = document.querySelector('.accordion-body')\r\n\r\n\tif (ThemeMode === 'dark') {\r\n\t\tbodyTg.style.background = 'rgba(33,37,41,1)'\r\n\t\tbodyTg.style.color = '#fff'\r\n\t\t// acc.style.color='#fff'\r\n\t} else {\r\n\t\tbodyTg.style.background = 'inherit'\r\n\t\tbodyTg.style.color = 'inherit'\r\n\t\t// acc.style.color='inherit'\r\n\t\t// 33,37,41\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <Router> */}\r\n\t\t\t\t<Navbar title=\"textutils\" about=\"about\" aboutUrl=\"/\" ThemeMode={ThemeMode} ToggleTheme={ToggleTheme}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* <Switch> */}\r\n\t\t\t\t\t{/* <Route exact path=\"/about\"> */}\r\n\t\t\t\t\t    {/* <div className=\"container\" >\r\n\t\t\t\t\t\t\t<Alert Alert={alert} />\r\n\r\n\t\t\t\t\t\t    <About ThemeMode={ThemeMode} defaultValue='light' />\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t{/* </Route> */}\r\n\t\t\t\t\t{/* <Route exact path=\"/\"> */}\r\n\t\t\t\t\t\t<div className=\"container\" >\r\n\t\t\t\t\t\t\t<Alert Alert={alert} />\r\n\t\t\t\t\t\t\t<TextForm\r\n\t\t\t\t\t\t\t\tHeading='Enter Your Text below'\r\n\t\t\t\t\t\t\t\tMode={ThemeMode}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* </Route> */}\r\n\t\t\t\t{/* </Switch> */}\r\n\t\t\t{/* </Router> */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}