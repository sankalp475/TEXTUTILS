{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About_button","color","background","border","padding","borderRadius","textTransform","marginBottom","marginTop","marginLeft","marginRight","About","props","className","id","ThemeMode","type","Mode","style","Navbar","to","title","onClick","ToggleTheme","htmlFor","about","placeholder","TextForm","useState","Text","setText","btn_styled_outline","handleCopy","e","a","preventDefault","navigator","clipboard","text","writeText","console","log","error","Heading","value","height","onChange","target","TextValue","toUpperCase","toLowerCase","split","join","length","Alert","role","word","lowerCase","charAt","slice","capitalised","msg","App","setThemeMode","alert","setAlert","showAlert","massage","setTimeout","bodyTg","document","querySelector","aboutUrl","exact","path","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.585c98f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/about.css'\r\n\r\nconst About_button = {\r\n\tcolor: '#20c997',\r\n\tbackground: '#20c997',\r\n\tborder: '2px solid #20c997',\r\n\tpadding: '5px 13px',\r\n\tborderRadius: '5px',\r\n\ttextTransform: 'uppercase',\r\n\tmarginBottom: '10px',\r\n\tmarginTop: '10px',\r\n\tmarginLeft: '10px',\r\n\tmarginRight: '10px'\r\n}\r\nfunction About(props) {\r\n\r\n\treturn (\r\n\t\t<div className=\"my-5 \">\r\n\t\t\t<h1 className=\"my-3\">ABOUT US</h1>\r\n\t\t\t<div className=\"accordion shadow-soft \" id=\"accordionExample\">\r\n\t\t\t\t<div className=\"accordion-item\">\r\n\t\t\t\t\t<h2 className=\"accordion-header \" id=\"headingOne\">\r\n\t\t\t\t\t\t<button className={`accordion-button bg-${(props.ThemeMode)} text-${(props.ThemeMode === 'light')? 'dark': 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n\t\t\t\t\t\t\tAccordion Item #1\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div id=\"collapseOne\" className=\"accordion-collapse collapsed\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n\t\t\t\t\t\t<div className={`accordion-body bg-${(props.ThemeMode)} text-${(props.ThemeMode === 'light')? 'dark': 'light'}`}>\r\n\t\t\t\t\t\t\t<strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as\r\n\t\t\t\t\t\t\twell as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\r\n\t\t\t\t\t\t\t<code>.accordion-body</code>, though the transition does limit overflow.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"accordion-item\">\r\n\t\t\t\t\t<h2 className=\"accordion-header\" id=\"headingTwo\">\r\n\t\t\t\t\t\t<button className={`accordion-button collapsed bg-${(props.ThemeMode)} text-${(props.ThemeMode === 'light')? 'dark': 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n\t\t\t\t\t\t\tAccordion Item #2\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n\t\t\t\t\t\t<div className={`accordion-body bg-${(props.ThemeMode)} text-${(props.ThemeMode === 'light')? 'dark': 'light'}`}>\r\n\t\t\t\t\t\t\t<strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as\r\n\t\t\t\t\t\t\twell as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\r\n\t\t\t\t\t\t\t<code>.accordion-body</code>, though the transition does limit overflow.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"accordion-item\">\r\n\t\t\t\t\t<h2 className=\"accordion-header\" id=\"headingThree\">\r\n\t\t\t\t\t\t<button className={`accordion-button collapsed bg-${(props.ThemeMode)} text-${(props.ThemeMode === 'light')? 'dark': 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n\t\t\t\t\t\t\tAccordion Item #3\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n\t\t\t\t\t\t<div className={`accordion-body bg-${(props.ThemeMode)} text-${(props.ThemeMode === 'light')? 'dark': 'light'}`}>\r\n\t\t\t\t\t\t\t<strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as\r\n\t\t\t\t\t\t\twell as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\r\n\t\t\t\t\t\t\t<code>.accordion-body</code>, though the transition does limit overflow.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className={`my-3 bg-${(props.Mode === 'light')?'dark':'dark'}`} style={About_button}>Enable Dark Mode</button>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default About\r\n","import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nfunction Navbar(props) {\r\n\r\n\r\n\r\n\tconst btn_styled = {\r\n\t\tcolor: '#fff',\r\n\t\tbackground: '#20c997',\r\n\t\tborder: '2px solid #20c997',\r\n\t\tpadding: '5px 13px',\r\n\t\tborderRadius: '5px',\r\n\t\ttextTransform: 'uppercase'\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${props.ThemeMode} bg-${props.ThemeMode} ${(props.ThemeMode === 'light')? 'box_shadow' : 'light'}`}>\r\n\r\n\t\t\t<div className=\"container-fluid \">\r\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</Link>\r\n\t\t\t\t<button className=\"navbar-toggler toggle\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t    <div className=\"form-check form-switch btn-tgl\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form-check-input padd\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tid=\"flexSwitchCheckChecked\"\r\n\t\t\t\t\t\tonClick={props.ToggleTheme}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"checkbox\" className={`text-${(props.ThemeMode === 'light')? 'dark' : 'light'}`}>MODE</label>\r\n\t\t\t    </div>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to='/about'>{props.about}</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<form className=\"d-flex search-box\">\r\n\t\t\t\t\t\t<input className=\"form-control me-2 search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\t\t\t\t\t\t<button style={btn_styled}>serach</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\r\n\t)\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tabout: PropTypes.string.isRequired,\r\n\taboutUrl: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import '../components/css/Textform.css';\r\nimport React, { useState } from 'react'\r\n\r\nfunction TextForm(props) {\r\n\tconst [Text, setText] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetText(e.target.value)\r\n\t}\r\n\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// console.log('upper case wase clickes')\r\n\t\tlet TextValue = Text.toUpperCase()\r\n\t\tsetText(TextValue)\r\n\t}\r\n\r\n\tconst btn_styled_upperCase = {\r\n\t\tcolor: '#20c997',\r\n\t\tbackground: '#20c997',\r\n\t\tborder: '2px solid #20c997',\r\n\t\tpadding: '5px 13px',\r\n\t\tborderRadius: '5px',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tmarginBottom: '10px',\r\n\t\tmarginTop: '10px',\r\n\t\tmarginLeft: '10px',\r\n\t\tmarginRight: '10px'\r\n\r\n\t}\r\n\r\n\tconst btn_styled_outline = {\r\n\t\tcolor: '#20c997',\r\n\t\tbackground: '#fff',\r\n\t\tborder: '2px solid #20c997',\r\n\t\tpadding: '5px 13px',\r\n\t\tborderRadius: '5px',\r\n\t\ttextTransform: 'uppercase',\r\n\t\tmarginBottom: '10px',\r\n\t\tmarginTop: '10px',\r\n\t\tmarginLeft: '10px',\r\n\t\tmarginRight: '10px'\r\n\t}\r\n\r\n\tconst handleClear = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet cleatText = ''\r\n\t\tsetText(cleatText)\r\n\t}\r\n\r\n\tconst handleCopy = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (!navigator.clipboard) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst text = Text\r\n\t\tif (text === '') {\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tawait navigator.clipboard.writeText(text)\r\n\t\t\tconsole.log('Copied to clipboard')\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed to copy!', err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleLower = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// console.log('upper case wase clickes')\r\n\t\tlet TextValue = Text.toLowerCase()\r\n\t\tsetText(TextValue)\r\n\t}\r\n\r\n\tconst handSplit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet TextValue = Text.split(' ').join('')\r\n\t\tsetText(TextValue)\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<form className=\"my-4\">\r\n\t\t\t<h5>{props.Heading}</h5>\r\n\t\t\t<div className=\"form-floating my-2 mx-textarea\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={Text}\r\n\t\t\t\t\tclassName={`form-control textarea text-${(props.Mode === 'light')?'dark':'light'}`}\r\n\t\t\t\t\tplaceholder=\"Leave a comment here\" id=\"floatingTextarea2\"\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theight: \"200px\",\r\n\t\t\t\t\t\t\tbackground: 'transparent',\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t>\r\n\t\t\t\t</textarea>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_upperCase}\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t\tclassName={`\r\n\t\t\t\t    bg-${(props.Mode === 'light') ? 'dark' : 'transparent'}\r\n\t\t\t    `}\r\n\r\n\t\t\t>   ToUpperCase\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handleClear}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   clear\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handleCopy}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   CopyText\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handleLower}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   TOlowar case\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btn_styled_outline}\r\n\t\t\t\tonClick={handSplit}\r\n\t\t\t\tclassName={`bg-${(props.Mode === 'light')?'dark':'transparent'}`}\r\n\t\t\t>   remove space\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className=\"container font\">\r\n\t\t\t\t<h4 className=\"headingText\">Your Summry</h4>\r\n\r\n\t\t\t\t<span className=\"mx-3\">WORDS:</span>\r\n\t\t\t\t<span >{Text.split(' ').length}</span>\r\n\t\t\t\t<span className=\"mx-3\">CHARACTERS:</span>\r\n\t\t\t\t<span >{Text.length}</span>\r\n\r\n\t\t\t\t<div>{0.008 * Text.split(' ').length} Words to Read</div>\r\n\t\t\t\t<h3>Prevue</h3>\r\n\t\t\t\t<p className=\"my-2 mx-3\">\r\n\t\t\t\t\t<span className='my-3'>{Text}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\t// const close_btn = {\r\n\t// \tcolor: '#fff',\r\n\t// \tbackground: '#20c997',\r\n\t// \tborder: '2px solid #20c997',\r\n\t// \tpadding: '0px 13px',\r\n\t// \tborderRadius: '5px',\r\n\t// \ttextTransform: 'uppercase',\r\n\t// \tmarginBottom: '10px',\r\n\t// \tmarginTop: '10px',\r\n\t// \tmarginLeft: '10px',\r\n\t// \tmarginRight: '10px',\r\n\t// \tfontSize: '1.3rem',\r\n\t// \tposition: 'absolute',\r\n\t// \tright: '0',\r\n\t// \ttop:'0'\r\n\t// }\r\n\t// const handleClick = (e) => {\r\n\t// \tconsole.log(e.target.parentElement.style.display = 'none')\r\n\t// }\r\n\r\n\tconst capitalised = (word) => {\r\n\t\tconst lowerCase = word.toLowerCase()\r\n\t\treturn lowerCase.charAt(0).toUpperCase() + lowerCase.slice(1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.Alert && <div className=\"alert alert-success alert-dismissible  fade show my-3\" role=\"alert\">\r\n\t\t\t\t<strong>{capitalised(props.Alert.type)}</strong>  {props.Alert.msg}\r\n\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert\r\n","import About from './components/About';\r\nimport './components/css/App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport { useState } from 'react'\r\nimport Alert from './components/Alert';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\tconst [ThemeMode, setThemeMode] = useState('light');\r\n\tconst [alert, setAlert] = useState(null)\r\n\r\n\tconst showAlert = (massage, type) => {\r\n\t\tsetAlert({\r\n\t\t\tmsg: massage,\r\n\t\t\ttype: type,\r\n\t\t})\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetAlert(null)\r\n\t\t}, 1200)\r\n\t}\r\n\tconst ToggleTheme = () => {\r\n\t\tif (ThemeMode === 'light') {\r\n\t\t\tsetThemeMode('dark')\r\n\t\t\tshowAlert('dark mode has been enabled', 'SUCCESS')\r\n\r\n\t\t} else {\r\n\t\t\tsetThemeMode('light')\r\n\t\t\tshowAlert('light mode has been enabled', 'SUCCESS')\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tconst bodyTg = document.querySelector('body')\r\n\t// const acc = document.querySelector('.accordion-body')\r\n\r\n\tif (ThemeMode === 'dark') {\r\n\t\tbodyTg.style.background = 'rgba(33,37,41,1)'\r\n\t\tbodyTg.style.color = '#fff'\r\n\t\t// acc.style.color='#fff'\r\n\t} else {\r\n\t\tbodyTg.style.background = 'inherit'\r\n\t\tbodyTg.style.color = 'inherit'\r\n\t\t// acc.style.color='inherit'\r\n\t\t// 33,37,41\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Router>\r\n\t\t\t\t<Navbar title=\"textutils\" about=\"about\" aboutUrl=\"/\" ThemeMode={ThemeMode} ToggleTheme={ToggleTheme}\r\n\t\t\t\t/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/about\">\r\n\t\t\t\t\t    <div className=\"container\" >\r\n\t\t\t\t\t\t\t<Alert Alert={alert} />\r\n\r\n\t\t\t\t\t\t    <About ThemeMode={ThemeMode} defaultValue='light' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<div className=\"container\" >\r\n\t\t\t\t\t\t\t<Alert Alert={alert} />\r\n\t\t\t\t\t\t\t<TextForm\r\n\t\t\t\t\t\t\t\tHeading='Enter Your Text below'\r\n\t\t\t\t\t\t\t\tMode={ThemeMode}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}